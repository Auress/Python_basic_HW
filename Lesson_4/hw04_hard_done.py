
__author__ = 'Шенк Евгений Станиславович'

while True:
    task = input('Введите номер решаемой задачи (1, 2, 3, q) : ')

# Задание-1:
# Матрицы в питоне реализуются в виде вложенных списков:
# Пример. Дано:
# matrix = [[1, 0, 8],
#           [3, 4, 1],
#           [0, 4, 2]]
          
# Выполнить поворот (транспонирование) матрицы
# Пример. Результат:
# matrix_rotate = [[1, 3, 0],
#                  [0, 4, 4],
#                  [8, 1, 2]]

# Суть сложности hard: Решите задачу в одну строку

    if task == '1':
        matrix = [[1, 0, 8],
                  [3, 4, 1],
                  [0, 4, 2]]

        print("rotate_matrix = ", list(map(list, zip(*matrix))))

# Задание-2:
# Найдите наибольшее произведение пяти последовательных цифр в 1000-значном числе.
# Выведите произведение и индекс смещения первого числа последовательных 5-ти цифр.
# Пример 1000-значного числа:

    if task == '2':
        number = '73167176531330624919225119674426574742355349194934'\
        '96983520312774506326239578318016984801869478851843'\
        '85861560789112949495459501737958331952853208805511'\
        '12540698747158523863050715693290963295227443043557'\
        '66896648950445244523161731856403098711121722383113'\
        '62229893423380308135336276614282806444486645238749'\
        '30358907296290491560440772390713810515859307960866'\
        '70172427121883998797908792274921901699720888093776'\
        '65727333001053367881220235421809751254540594752243'\
        '52584907711670556013604839586446706324415722155397'\
        '53697817977846174064955149290862569321978468622482'\
        '83972241375657056057490261407972968652414535100474'\
        '82166370484403199890008895243450658541227588666881'\
        '16427171479924442928230863465674813919123162824586'\
        '17866458359124566529476545682848912883142607690042'\
        '24219022671055626321111109370544217506941658960408'\
        '07198403850962455444362981230987879927244284909188'\
        '84580156166097919133875499200524063689912560717606'\
        '05886116467109405077541002256983155200055935729725'\
        '71636269561882670428252483600823257530420752963450'

        i = 0
        j = 5
        mult_list = []
        while j < len(number):
            x = 1
            for f in number[i:j]:
                x = x * int(f)
            mult_list.append(x)
            i += 1
            j += 1

        for idx in enumerate(mult_list):
            if max(mult_list) in idx:
                print("наибольшее произведение пяти последовательных цифр = ", idx[1])
                print("                     индекс смещения первого числа = ", idx[0])

# Задание-3 (Ферзи):
# Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били
# друг друга. Вам дана расстановка 8 ферзей на доске.
# Определите, есть ли среди них пара бьющих друг друга.
# Программа получает на вход восемь пар чисел,
# каждое число от 1 до 8 — координаты 8 ферзей.
# Если ферзи не бьют друг друга, выведите слово NO, иначе выведите YES.

    if task == '3':
        # queens = [[1, 7], [2, 5], [3, 3], [4, 1], [5, 6], [6, 8], [7, 2], [8, 4]]       # No
        queens = [[1, 7], [2, 5], [6, 8], [4, 1], [5, 6], [4, 4], [7, 2], [8, 4]]       # Yes
        field = [[0, 0, 0, 0, 0, 0, 0, 0],  #1
                 [0, 0, 0, 0, 0, 0, 0, 0],  #2
                 [0, 0, 0, 0, 0, 0, 0, 0],  #3
                 [0, 0, 0, 0, 0, 0, 0, 0],  #4
                 [0, 0, 0, 0, 0, 0, 0, 0],  #5
                 [0, 0, 0, 0, 0, 0, 0, 0],  #6
                 [0, 0, 0, 0, 0, 0, 0, 0],  #7
                 [0, 0, 0, 0, 0, 0, 0, 0]]  #8

        for i, line in enumerate(field):
            for j, el in enumerate(line):
                if [i+1, j+1] in queens:
                    field[j][i] += 6
                    k = 0
                    for f in field:
                        field[j][k] += 1
                        field[k][i] += 1
                        k += 1
                    a = 0
                    b = 0
                    if j >= i:
                        a = j - i
                    else:
                        b = i - j
                    while a < 8 and b < 8:
                        try:
                            field[a][b] += 1
                            a += 1
                            b += 1
                        except IndexError:
                            break
                    c = j
                    d = i
                    while c < 8 and d >= 0:
                        c += 1
                        d -= 1
                    while c >= 0 and d < 8:
                        try:
                            field[c][d] += 1
                            c -= 1
                            d += 1
                        except IndexError:
                            c -= 1
                            d += 1

        answer = 0
        for row in field:
            for x in row:
                print("{:4d}".format(x), end='')
                if x > 10:
                    answer += 1
            print()

        if answer == 0:
            print('\n   >>> NO <<<   \n')
        else:
            print('\n   >>> YES <<<   \n')

    if task == 'q':
        break
